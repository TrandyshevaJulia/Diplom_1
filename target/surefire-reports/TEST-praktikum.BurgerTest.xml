<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="praktikum.BurgerTest" time="0.314" tests="10" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="16"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1251"/>
    <property name="java.class.path" value="D:\Diplom_1\target\test-classes;D:\Diplom_1\target\classes;C:\Users\Юлия\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\Юлия\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Юлия\.m2\repository\org\mockito\mockito-core\3.12.4\mockito-core-3.12.4.jar;C:\Users\Юлия\.m2\repository\net\bytebuddy\byte-buddy\1.11.13\byte-buddy-1.11.13.jar;C:\Users\Юлия\.m2\repository\net\bytebuddy\byte-buddy-agent\1.11.13\byte-buddy-agent-1.11.13.jar;C:\Users\Юлия\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;"/>
    <property name="java.vm.vendor" value="Amazon.com Inc."/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://aws.amazon.com/corretto/"/>
    <property name="user.timezone" value="Asia/Novosibirsk"/>
    <property name="os.name" value="Windows 10"/>
    <property name="java.vm.specification.version" value="16"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="RU"/>
    <property name="sun.boot.library.path" value="C:\Users\Юлия\.jdks\corretto-16.0.2\bin"/>
    <property name="sun.java.command" value="C:\Users\Юлия\AppData\Local\Temp\surefire18249664328402615484\surefirebooter-20240720145200990_3.jar C:\Users\Юлия\AppData\Local\Temp\surefire18249664328402615484 2024-07-20T14-51-59_470-jvmRun1 surefire-20240720145200990_1tmp surefire_0-20240720145200990_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="D:\Diplom_1\target\test-classes;D:\Diplom_1\target\classes;C:\Users\Юлия\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\Юлия\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Юлия\.m2\repository\org\mockito\mockito-core\3.12.4\mockito-core-3.12.4.jar;C:\Users\Юлия\.m2\repository\net\bytebuddy\byte-buddy\1.11.13\byte-buddy-1.11.13.jar;C:\Users\Юлия\.m2\repository\net\bytebuddy\byte-buddy-agent\1.11.13\byte-buddy-agent-1.11.13.jar;C:\Users\Юлия\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\Юлия"/>
    <property name="user.language" value="ru"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2021-07-20"/>
    <property name="java.home" value="C:\Users\Юлия\.jdks\corretto-16.0.2"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="D:\Diplom_1"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="C:\Users\Юлия\AppData\Local\Temp\surefire18249664328402615484\surefirebooter-20240720145200990_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="16.0.2+7"/>
    <property name="user.name" value="Юлия"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="Cp1251"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Corretto-16.0.2.7.1"/>
    <property name="localRepository" value="C:\Users\Юлия\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/corretto/corretto-jdk/issues/"/>
    <property name="java.io.tmpdir" value="C:\Users\0E3B~1\AppData\Local\Temp\"/>
    <property name="idea.version" value="2023.3.6"/>
    <property name="java.version" value="16.0.2"/>
    <property name="user.dir" value="D:\Diplom_1"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="java.library.path" value="C:\Users\Юлия\.jdks\corretto-16.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\apache-maven-3.9.6\bin;C:\Python311\Scripts\;C:\Python311\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\bin;C:\WebDriver\bin;C:\Users\Юлия\projects\allure-2.29.0\bin;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\Юлия\AppData\Local\Microsoft\WindowsApps;C:\Users\Юлия\AppData\Roaming\npm;C:\Users\Юлия\AppData\Local\Programs\Microsoft VS Code\bin;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Amazon.com Inc."/>
    <property name="java.vm.version" value="16.0.2+7"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="60.0"/>
  </properties>
  <testcase name="testBurgerWithIngredients[0]" classname="praktikum.BurgerTest" time="0.046">
    <system-out><![CDATA[Expected Receipt:
(==== black bun ====)
= sauce hot sauce =
(==== black bun ====)

Price: 300.000000

Actual Receipt:
(==== black bun ====)
= sauce hot sauce =
(==== black bun ====)

Price: 300,000000

Formatted Actual Receipt:
(==== black bun ====)
= sauce hot sauce =
(==== black bun ====)

Price: 300.000000

]]></system-out>
  </testcase>
  <testcase name="testBurgerWithIngredients[1]" classname="praktikum.BurgerTest" time="0.008">
    <system-out><![CDATA[Expected Receipt:
(==== black bun ====)
= filling cutlet =
(==== black bun ====)

Price: 300.000000

Actual Receipt:
(==== black bun ====)
= filling cutlet =
(==== black bun ====)

Price: 300,000000

Formatted Actual Receipt:
(==== black bun ====)
= filling cutlet =
(==== black bun ====)

Price: 300.000000

]]></system-out>
  </testcase>
  <testcase name="testBurgerWithIngredients[2]" classname="praktikum.BurgerTest" time="0.003">
    <system-out><![CDATA[Expected Receipt:
(==== white bun ====)
= sauce sour cream =
(==== white bun ====)

Price: 600.000000

Actual Receipt:
(==== white bun ====)
= sauce sour cream =
(==== white bun ====)

Price: 600,000000

Formatted Actual Receipt:
(==== white bun ====)
= sauce sour cream =
(==== white bun ====)

Price: 600.000000

]]></system-out>
  </testcase>
  <testcase name="testBurgerWithIngredients[3]" classname="praktikum.BurgerTest" time="0.01">
    <system-out><![CDATA[Expected Receipt:
(==== white bun ====)
= filling dinosaur =
(==== white bun ====)

Price: 600.000000

Actual Receipt:
(==== white bun ====)
= filling dinosaur =
(==== white bun ====)

Price: 600,000000

Formatted Actual Receipt:
(==== white bun ====)
= filling dinosaur =
(==== white bun ====)

Price: 600.000000

]]></system-out>
  </testcase>
  <testcase name="testBurgerWithIngredients[4]" classname="praktikum.BurgerTest" time="0.009">
    <system-out><![CDATA[Expected Receipt:
(==== red bun ====)
= sauce chili sauce =
(==== red bun ====)

Price: 900.000000

Actual Receipt:
(==== red bun ====)
= sauce chili sauce =
(==== red bun ====)

Price: 900,000000

Formatted Actual Receipt:
(==== red bun ====)
= sauce chili sauce =
(==== red bun ====)

Price: 900.000000

]]></system-out>
  </testcase>
  <testcase name="testBurgerWithIngredients[5]" classname="praktikum.BurgerTest" time="0.01">
    <system-out><![CDATA[Expected Receipt:
(==== red bun ====)
= filling sausage =
(==== red bun ====)

Price: 900.000000

Actual Receipt:
(==== red bun ====)
= filling sausage =
(==== red bun ====)

Price: 900,000000

Formatted Actual Receipt:
(==== red bun ====)
= filling sausage =
(==== red bun ====)

Price: 900.000000

]]></system-out>
  </testcase>
  <testcase name="testBurgerWithIngredients[6]" classname="praktikum.BurgerTest" time="0.009">
    <system-out><![CDATA[Expected Receipt:
(==== black bun ====)
= sauce hot sauce =
= filling cutlet =
(==== black bun ====)

Price: 400.000000

Actual Receipt:
(==== black bun ====)
= sauce hot sauce =
= filling cutlet =
(==== black bun ====)

Price: 400,000000

Formatted Actual Receipt:
(==== black bun ====)
= sauce hot sauce =
= filling cutlet =
(==== black bun ====)

Price: 400.000000

]]></system-out>
  </testcase>
  <testcase name="testBurgerWithIngredients[7]" classname="praktikum.BurgerTest" time="0.005">
    <system-out><![CDATA[Expected Receipt:
(==== black bun ====)
= sauce hot sauce =
= sauce sour cream =
(==== black bun ====)

Price: 500.000000

Actual Receipt:
(==== black bun ====)
= sauce hot sauce =
= sauce sour cream =
(==== black bun ====)

Price: 500,000000

Formatted Actual Receipt:
(==== black bun ====)
= sauce hot sauce =
= sauce sour cream =
(==== black bun ====)

Price: 500.000000

]]></system-out>
  </testcase>
  <testcase name="testBurgerWithIngredients[8]" classname="praktikum.BurgerTest" time="0.008">
    <system-out><![CDATA[Expected Receipt:
(==== white bun ====)
= sauce sour cream =
= filling dinosaur =
(==== white bun ====)

Price: 800.000000

Actual Receipt:
(==== white bun ====)
= sauce sour cream =
= filling dinosaur =
(==== white bun ====)

Price: 800,000000

Formatted Actual Receipt:
(==== white bun ====)
= sauce sour cream =
= filling dinosaur =
(==== white bun ====)

Price: 800.000000

]]></system-out>
  </testcase>
  <testcase name="testBurgerWithIngredients[9]" classname="praktikum.BurgerTest" time="0.116">
    <system-out><![CDATA[Expected Receipt:
(==== red bun ====)
= sauce chili sauce =
= filling sausage =
(==== red bun ====)

Price: 1200.000000

Actual Receipt:
(==== red bun ====)
= sauce chili sauce =
= filling sausage =
(==== red bun ====)

Price: 1200,000000

Formatted Actual Receipt:
(==== red bun ====)
= sauce chili sauce =
= filling sausage =
(==== red bun ====)

Price: 1200.000000

]]></system-out>
  </testcase>
</testsuite>